Клиент хочет разработать для косметологов приложение, похожее на Instagram. Каким-то образом она услышала, что великий язык программирования - Ruby, и спрашивает, подходит ли это для проекта.
	Пожалуйста, посоветуйте клиенту наилучший технический подход к такому приложению, основанный на исследованиях, которые вы провели с точки зрения производительности Instagram (сам технологический стек с фоном, пожалуйста, опишите, почему вы советуете именно эти варианты).

	Для начала стоит определиться, что значит «похожее на Инстаграм»? Инстаграм имеет web, android и IOS версии, что заставляет нас задуматься о правильном выборе для бек-части приложений. 
	Тут возникает возможность добавить тот самый Ruby для бэк-части, но это за собой повлечет довольно много проблем еще на этапе сбора команды, планирования и финансовой стороны проекта. 
	Для понимания причин данных проблем, стоит углубиться в особенности поиска кадров, программирующих на Ruby, а еще, в особенности самого языка. 
	Ruby – несмотря на свою сложность, он имеет множество бонусов, которые, зачастую, могут оценить только те разработчики, что перешли на него после длительного опыта работы с другим (язык крайне непопулярный при выборе «первого языка»).  Но желающих программировать на Ruby не становится больше, даже несмотря на все его бонусы. Согласно рейтингу TIOBE (Рейтинг основаны на количестве квалифицированных инженеров по всему миру, курсов и вендоров), Ruby постепенно теряет позиции. Что приводит нас к проблемам с поиском кадров. Найти хорошего Ruby-специалиста на рынке сейчас сложно, затребует он больше денег, нежели PHP и Python – разработчики. Возникает вопрос, можно ли найти альтернативу в более популярных языках программирования и фреймворках, написанных под них? 
	Рассмотреть стоит два варианта: PHP-фреймворк – Laravel и Python-фреймворк – Django. Оба очень хорошо подходят для хранения информации, что нужна для инстаграм. Оба имеют большое комьюнити и широкий выбор кадров на рынке. Выбор между ними уже будет упираться в особенности проекта и предпочтения архитектора. В случае с «оригиналом», разработчики инстаграм выбрали Django. Но все зависит от отличий в «проекте для косметологов» и инстаграм. Чем больше GUI будет в проекте, тем больше стоит склоняться к выбору Laravel. 
	
	Это приводит нас к такому выбору языков и фреймворков: 
	Фронт-часть вэб-версии будет делать команда, работающая на angularJS (лучше подходит для энтерпрайз проектов, нежели react) 
	Фронт-часть андроид-приложения делают Java или Kotlin девелоперы (здесь выбрать стоит, все же, Java, ибо даже несмотря на продвижение Kotlin и его полную совместимость с Java, комьюнити Java-разработчиков в разы больше, чем Kotlin, что позволит нам находить разработчиков в команду быстрее и качественнее) 
	Фронт-часть для IOS ныне принято делать на Swift (ибо Apple сами разрабатывали данный язык, специально для разработчиков iOS и macOS. Еще одним бонусом SWIFT является возможность использовать рантайм Objective-C, что делает возможным использование обоих языков (а также С) в рамках одной программы.).
	А общую бэк-часть реализуют при помощи Laravel (PHP) или Django (Python). Окончательный выбор будет сделан после того, как появится более точный scope проекта. 


